<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Actions.Api</name>
    </assembly>
    <members>
        <member name="M:Actions.Api.Controllers.ActionController.GetActionsAsync(Actions.Core.Domain.Actions.Handlers.ActionsQueryHandler,System.String,Actions.Core.Domain.Shared.Enums.MetadataTypeEnum,System.Int32,System.Int32)">
             <summary>
             Retrieve the list of actions
             </summary>
             <response code="200">If it is successful</response>
             <response code="401">If has no access</response>
             <remarks>
             Sample request:
            
                 GET /api/v1/action
            
             </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.ActionController.GetActionStatus">
             <summary>
             Retrieves the list of action status
             </summary>
             <response code="200">If it is successful</response>
             <remarks>
             Sample request:
            
                 GET /api/v1/action/status
            
             </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.ActionController.GetStatus">
             <summary>
             Retrieves the list of shared status
             </summary>
             <response code="200">If it is successful</response>
             <remarks>
             Sample request:
            
                 GET /api/v1/action/status
            
             </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.ActionController.GetRiskCategory">
             <summary>
             Retrieves the list of risk category
             </summary>
             <response code="200">If it is successful</response>
             <remarks>
             Sample request:
            
                 GET /api/v1/action/risk-category
            
             </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.ActionController.GetPriority">
             <summary>
             Retrieves the list of priorities
             </summary>
             <response code="200">If it is successful</response>
             <remarks>
             Sample request:
            
                 GET /api/v1/action/priority
            
             </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.ActionController.GetProjectStep">
             <summary>
             Retrieves the list of project step
             </summary>
             <response code="200">If it is successful</response>
             <remarks>
             Sample request:
            
                 GET /api/v1/action/project-step
            
             </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.ActionController.GetDimension">
             <summary>
             Retrieves the list of dimension
             </summary>
             <response code="200">If it is successful</response>
             <remarks>
             Sample request:
            
                 GET /api/v1/action/dimension
            
             </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.ActionController.GetByIdAsync(Actions.Core.Domain.Actions.Handlers.ActionsQueryHandler,System.String)">
             <summary>
             Retrieve a action by id 
             </summary>
             <response code="200">If it is successful</response>
             <response code="401">If has no access</response>
             <remarks>
             Sample request:
            
                 GET /api/v1/action/{id}
            
             </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.ActionController.GetByIdAsync(Actions.Core.Domain.Actions.Handlers.ActionsQueryHandler,System.String,System.String)">
             <summary>
             Search risk(s) and deviation(s)
             </summary>
             <response code="200">If it is successful</response>
             <response code="401">If has no access</response>
             <remarks>
             Sample request:
            
                 GET /api/v1/action/riskdeviation/search/{search}/metadataId{metadataId}
            
             </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.ActionController.PostAsync(Actions.Core.Domain.Actions.Handlers.ActionsCommandHandler,Actions.Core.Domain.Actions.Commands.CreateActionCommand)">
            <summary>
            Insert a action
            </summary>
            <response code="200">If it is successful</response>
            <response code="400">If invalid data is sent</response>
            <response code="401">If has no access</response>
            <remarks>
            Sample request:
            
                POST /api/v1/action
                 
            </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.ActionController.PutAsync(Actions.Core.Domain.Actions.Handlers.ActionsCommandHandler,Actions.Core.Domain.Actions.Commands.UpdateActionCommand)">
             <summary>
             Change a action
             </summary>
             <response code="200">If it is successful</response>
             <response code="400">If invalid data is sent</response>
             <response code="401">If has no access</response>
             <response code="404">If no data is found</response>
             <remarks>
             Sample request:
            
                 PUT /api/v1/action
            
             </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.ActionController.Delete(Actions.Core.Domain.Actions.Handlers.ActionsCommandHandler,System.String)">
            <summary>
            Delete action by id
            </summary>
            <response code="200">If it is successful</response>
            <response code="400">If invalid data is sent</response>
            <response code="401">If has no access</response>
            <remarks>
            Sample request:
            
                DELETE /api/v1/action/{id}
                 
            </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.DeviationController.GetActionsAsync(Actions.Core.Domain.Deviations.Handlers.DeviationsQueryHandler,System.String,Actions.Core.Domain.Shared.Enums.MetadataTypeEnum,System.Int32,System.Int32)">
             <summary>
             Retrieve the list of deviation
             </summary>
             <response code="200">If it is successful</response>
             <response code="401">If has no access</response>
             <remarks>
             Sample request:
            
                 GET /api/v1/deviation
            
             </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.DeviationController.GetByIdAsync(Actions.Core.Domain.Deviations.Handlers.DeviationsQueryHandler,System.String)">
             <summary>
             Retrieve a deviation by id 
             </summary>
             <response code="200">If it is successful</response>
             <response code="401">If has no access</response>
             <remarks>
             Sample request:
            
                 GET /api/v1/deviation/{id}
            
             </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.DeviationController.PostAsync(Actions.Core.Domain.Deviations.Handlers.DeviationsCommandHandler,Actions.Core.Domain.Deviations.Commands.CreateDeviationCommand)">
            <summary>
            Insert a deviation
            </summary>
            <response code="200">If it is successful</response>
            <response code="400">If invalid data is sent</response>
            <response code="401">If has no access</response>
            <remarks>
            Sample request:
            
                POST /api/v1/deviation
                 
            </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.DeviationController.PutAsync(Actions.Core.Domain.Deviations.Handlers.DeviationsCommandHandler,Actions.Core.Domain.Deviations.Commands.UpdateDeviationCommand)">
             <summary>
             Change a deviation
             </summary>
             <response code="200">If it is successful</response>
             <response code="400">If invalid data is sent</response>
             <response code="401">If has no access</response>
             <response code="404">If no data is found</response>
             <remarks>
             Sample request:
            
                 PUT /api/v1/deviation
            
             </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.DeviationController.Delete(Actions.Core.Domain.Deviations.Handlers.DeviationsCommandHandler,System.String)">
            <summary>
            Delete deviation by id
            </summary>
            <response code="200">If it is successful</response>
            <response code="400">If invalid data is sent</response>
            <response code="401">If has no access</response>
            <remarks>
            Sample request:
            
                DELETE /api/v1/deviation/{id}
                 
            </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.RiskController.GetAsync(Actions.Core.Domain.Risks.Handlers.RisksQueryHandler,System.String,Actions.Core.Domain.Shared.Enums.MetadataTypeEnum,System.Int32,System.Int32)">
             <summary>
             Retrieve the list risks 
             </summary>
             <response code="200">If it is successful</response>
             <response code="401">If has no access</response>
             <remarks>
             Sample request:
            
                 GET /api/v1/risk?originId=&amp;originType==&amp;
            
             </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.RiskController.GetByIdAsync(Actions.Core.Domain.Risks.Handlers.RisksQueryHandler,System.String)">
             <summary>
             Retrieve a risk by id 
             </summary>
             <response code="200">If it is successful</response>
             <response code="401">If has no access</response>
             <remarks>
             Sample request:
            
                 GET /api/v1/risk/{id}
            
             </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.RiskController.GetByIdAsync(Actions.Core.Domain.Risks.Handlers.RisksQueryHandler,System.String,System.String)">
             <summary>
             Search risk(s)
             </summary>
             <response code="200">If it is successful</response>
             <response code="401">If has no access</response>
             <remarks>
             Sample request:
            
                 GET /api/v1/risk/search/{search}/metadataId{metadataId}
            
             </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.RiskController.PostAsync(Actions.Core.Domain.Risks.Handlers.RisksCommandHandler,Actions.Core.Domain.Risks.Commands.CreateRiskCommand)">
            <summary>
            Insert a risk
            </summary>
            <response code="200">If it is successful</response>
            <response code="400">If invalid data is sent</response>
            <response code="401">If has no access</response>
            <remarks>
            Sample request:
            
                POST /api/v1/risk
                 
            </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.RiskController.PutAsync(Actions.Core.Domain.Risks.Handlers.RisksCommandHandler,Actions.Core.Domain.Risks.Commands.UpdateRiskCommand)">
             <summary>
             Change a risk
             </summary>
             <response code="200">If it is successful</response>
             <response code="400">If invalid data is sent</response>
             <response code="401">If has no access</response>
             <response code="404">If no data is found</response>
             <remarks>
             Sample request:
            
                 PUT /api/v1/risk
            
             </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.RiskController.Delete(Actions.Core.Domain.Risks.Handlers.RisksCommandHandler,System.String)">
            <summary>
            Delete risk by id
            </summary>
            <response code="200">If it is successful</response>
            <response code="400">If invalid data is sent</response>
            <response code="401">If has no access</response>
            <remarks>
            Sample request:
            
                DELETE /api/v1/risk/{id}
                 
            </remarks>
        </member>
        <member name="M:Actions.Api.Controllers.StatusHistoryController.GetAsync(Actions.Core.Domain.StatusHistories.Handlers.StatusHistoriesQueryHandler,System.Int32,System.Int32,System.String)">
             <summary>
             Retrieve the list of status history
             </summary>
             <response code="200">If it is successful</response>
             <response code="401">If has no access</response>
             <remarks>
             Sample request:
            
                 GET /api/v1/statushistory?page=[1]&amp;count=[20]
            
             </remarks>
        </member>
    </members>
</doc>
